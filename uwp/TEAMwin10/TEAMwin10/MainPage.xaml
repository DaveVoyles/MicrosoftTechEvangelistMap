<Page
    x:Class="TEAMwin10.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TEAMwin10"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:TEAMwin10"
    mc:Ignorable="d">

    <Page.Resources>
        <!-- When using x:Bind, you need to set x:DataType -->
        <DataTemplate x:Name="PeopleListViewTemplate" x:DataType="data:Value">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--<Ellipse x:Name="Ellipse"
                         Grid.RowSpan="2"
                         Width ="32"
                         Height="32"
                         Margin="6"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         Fill="LightGray"/>-->
                <Image x:Name="Photo"
                         Grid.RowSpan="2"
                         Width ="32"
                         Height="32"
                         Margin="6"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         Source="Assets\User-Icon.png" />
                <TextBlock Grid.Column="1"
                           Text="{x:Bind displayName}" 
                           x:Phase="1"  
                           Style="{ThemeResource BaseTextBlockStyle}"
                           Margin="12,6,0,0"/>
                <TextBlock  Grid.Column="1"
                            Grid.Row="1"
                            Text="{x:Bind jobTitle}" 
                            x:Phase="2"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Margin="12,0,0,0"/>
                <TextBlock  Grid.Column="1"
                            Grid.Row="2"
                            Text="{x:Bind officeLocation}" 
                            x:Phase="2"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Margin="12,0,0,0"/>
                <HyperlinkButton x:Name="phoneLink"
                            Grid.Column="1"
                            Grid.Row="3"
                            Content="{x:Bind mobilePhone}" 
                            x:Phase="2"
                            Style="{ThemeResource TextBlockButtonStyle}"
                            Margin="12,0,0,6"
                            Click="phoneLink_Click"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Button Name="SplitViewButton" Background="Transparent" Padding="0,-6" Margin="12" Click="SplitViewButton_Click">
            <FontIcon FontFamily="{ThemeResource ContentControlThemeFontFamily}" Glyph="&#x2261;" FontSize="32" Margin="0,-8,0,0"/>
        </Button>
        <TextBlock Style="{ThemeResource SubheaderTextBlockStyle}" Text="Technical Evangelists" 
                RelativePanel.RightOf="SplitViewButton" />
        <SplitView x:Name="MySplitView" PaneBackground="LightGray" OpenPaneLength="200"
                RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.Below="SplitViewButton">
            <SplitView.Pane>
                <RelativePanel>
                    <!-- Static Relativepanel, substitutes nested stackpanel or grid with rows/columns for this simple scenario -->
                    <AppBarButton x:Name="HomeButton" Icon="Home" IsCompact="True" />
                    <TextBlock Text="Home"  
                            RelativePanel.RightOf="HomeButton" RelativePanel.AlignVerticalCenterWith="HomeButton"/>
                    <AppBarButton x:Name="PeopleButton" Icon="People" 
                                RelativePanel.Below="HomeButton" IsCompact="True" />
                    <TextBlock Text="People"  
                            RelativePanel.RightOf="PeopleButton" RelativePanel.Below="HomeButton"  RelativePanel.AlignVerticalCenterWith="PeopleButton"/>
                    <AppBarButton x:Name="MapButton" Icon="Map" 
                                RelativePanel.Below="PeopleButton" IsCompact="True" />
                    <TextBlock Text="Map"  
                            RelativePanel.RightOf="MapButton" RelativePanel.Below="PeopleButton" RelativePanel.AlignVerticalCenterWith="MapButton"/>
                </RelativePanel>
            </SplitView.Pane>
            <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled">
                <StackPanel Margin="12">
                    <TextBlock Text="Technical Evangelists reporting to Joe Shirey:"
                               Style="{ThemeResource BaseTextBlockStyle}"
                               Margin="0, 0, 0, 12"/>
                    <ListView x:Name="ListPeople" 
                        ItemTemplate="{StaticResource PeopleListViewTemplate}"
                        SelectionMode="Single"
                        ShowsScrollingPlaceholders="True"
                        Grid.Row="1"
                        Grid.ColumnSpan="2">
                    </ListView>
                </StackPanel>
                    
            </ScrollViewer>
        </SplitView>
        <!-- Responsive VisualStates -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Widest possible layout moves some elements around to optimize for more available width 
                    and keeps SplitView pane always showing inline -->
                        <Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=548 and <720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="548" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For intermediate window widths as well as most phones on landscape orientation, 
                    this state keeps primary layout narrow while showing the splitview pane to take advantage of more available width than narrow layout -->
                        <Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For the most narrow windows and phones in portrait orientation, this state collapses the SplitView pane into overlay mode
                    and adds dynamic RelativePanel constraints that puts all elements stacked below each other -->
                        <Setter Target="MySplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>
